<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Board | Alumnium</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/alumni.css">
    <script>
        (function() {
            const savedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
            if (savedTheme === 'dark') {
                document.documentElement.classList.add('dark');
            }
        })();
    </script>
</head>
<body>

    <script>
        (function() {
            const savedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
            if (savedTheme === 'dark') document.documentElement.classList.add('dark');
        })();
    </script>

    <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1150">
        <div id="jobToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto" id="toastTitle">Notification</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="toastBody"></div>
        </div>
    </div>
    
    <div class="dashboard-layout">
        <%- include('partials/alumni-sidebar', { currentPage: 'jobs', alumni: alumni }) %>

        <main class="main-content">
            <div class="mobile-header d-lg-none mb-4">
                <h1 class="h2">Job Board</h1>
                <button class="btn btn-light" type="button" id="sidebarToggle"><i class="bi bi-list"></i></button>
            </div>
            
            <div class="d-flex justify-content-between align-items-center mb-4">
                 <h1 class="h2 d-none d-lg-block mb-0">Job Board</h1>
                 <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#postJobModal"><i class="bi bi-plus-circle-fill me-2"></i>Post a Job</button>
            </div>

            <div class="content-card mb-4 animate-on-scroll" style="--animation-order: 0;">
                <div class="aurora-glow"></div>
                <form action="/alumni-jobs" method="GET" class="row g-3 align-items-end">
                    <div class="col-md-6"><label for="title" class="form-label">Search by Title</label><input type="text" class="form-control" id="title" name="title" value="<%= titleQuery %>" placeholder="e.g., Software Engineer"></div>
                    <div class="col-md-4"><label for="location" class="form-label">Location</label><input type="text" class="form-control" id="location" name="location" value="<%= locationQuery %>" placeholder="e.g., New York"></div>
                    <div class="col-md-2"><button type="submit" class="btn btn-light w-100">Filter</button></div>
                </form>
            </div>

            <div class="row g-4">
                <% if(jobs.length > 0) { %>
                    <% jobs.forEach((job, index) => { %>
                        <div class="col-lg-6 animate-on-scroll" style="--animation-order: <%= index + 1 %>;">
                            <div class="content-card h-100 d-flex flex-column">
                                <div class="aurora-glow"></div>
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h5 class="mb-1"><%= job.title %></h5>
                                        <p class="mb-1 text-muted-foreground"><%= job.company %></p>
                                    </div>
                                    <span class="badge bg-light text-dark border"><i class="bi bi-geo-alt-fill me-1"></i><%= job.location %></span>
                                </div>
                                <hr>
                                <p class="text-muted-foreground flex-grow-1"><%= job.description.substring(0, 120) %>...</p>
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <small class="text-muted-foreground">Posted by: <%= job.postedBy ? job.postedBy.name : 'Alumni' %></small>
                                    <button class="btn btn-primary btn-sm view-details-btn" data-bs-toggle="modal" data-bs-target="#jobDetailsModal" data-job='<%- JSON.stringify(job) %>'>
                                        View Details
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="col-12"><div class="content-card text-center"><h5 class="mb-0">No jobs found. Be the first to post one!</h5></div></div>
                <% } %>
            </div>
        </main>
    </div>

    <!-- Job Details Modal -->
    <div class="modal fade" id="jobDetailsModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <div>
                        <h5 class="modal-title" id="modalJobTitle">Job Title</h5>
                        <p class="mb-0 text-muted-foreground" id="modalJobCompany"></p>
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Location:</strong> <span id="modalJobLocation"></span></p>
                    <p><strong>Description:</strong></p>
                    <p id="modalJobDescription" style="white-space: pre-wrap;"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                    <a href="#" id="modalApplyLink" target="_blank" class="btn btn-primary">Apply Now <i class="bi bi-box-arrow-up-right ms-1"></i></a>
                </div>
            </div>
        </div>
    </div>

    <!-- Post a Job Modal -->
    <div class="modal fade" id="postJobModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <form id="postJobForm">
                    <div class="modal-header">
                        <h5 class="modal-title">Post a New Job</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <div class="col-md-6"><label for="jobTitle" class="form-label">Job Title</label><input type="text" class="form-control" id="jobTitle" required></div>
                            <div class="col-md-6"><label for="company" class="form-label">Company</label><input type="text" class="form-control" id="company" required></div>
                            <div class="col-12"><label for="location" class="form-label">Location</label><input type="text" class="form-control" id="jobLocation" required></div>
                            <div class="col-12"><label for="description" class="form-label">Description</label><textarea class="form-control" id="description" rows="5" required></textarea></div>
                            <div class="col-12"><label for="applicationLink" class="form-label">Application Link</label><input type="url" class="form-control" id="applicationLink" required></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" id="submitJobBtn">Post Job</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const toastElement = document.getElementById('jobToast');
            const toast = new bootstrap.Toast(toastElement);

            function showToast(title, message, isSuccess) {
                document.getElementById('toastTitle').textContent = title;
                document.getElementById('toastBody').textContent = message;
                toastElement.classList.remove('bg-success', 'bg-danger', 'text-white');
                toastElement.classList.add(isSuccess ? 'bg-success' : 'bg-danger', 'text-white');
                toast.show();
            }

            const themeMenuToggle = document.getElementById('theme-menu-toggle');
            if(themeMenuToggle) {
                themeMenuToggle.addEventListener('click', (e) => {
                    e.preventDefault();
                    document.documentElement.classList.toggle('dark');
                    localStorage.setItem('theme', document.documentElement.classList.contains('dark') ? 'dark' : 'light');
                });
            }

            const sidebarToggle = document.getElementById('sidebarToggle');
            const sidebar = document.getElementById('sidebar');
            if (sidebarToggle && sidebar) {
                sidebarToggle.addEventListener('click', () => sidebar.classList.toggle('show'));
            }

            const animatedElements = document.querySelectorAll('.animate-on-scroll');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => { if (entry.isIntersecting) entry.target.classList.add('is-visible'); });
            }, { threshold: 0.1 });
            animatedElements.forEach(el => observer.observe(el));

            // Job Details Modal
            const jobDetailsModal = document.getElementById('jobDetailsModal');
            jobDetailsModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const jobData = JSON.parse(button.getAttribute('data-job'));
                
                document.getElementById('modalJobTitle').textContent = jobData.title;
                document.getElementById('modalJobCompany').textContent = jobData.company;
                document.getElementById('modalJobLocation').textContent = jobData.location;
                document.getElementById('modalJobDescription').textContent = jobData.description;
                document.getElementById('modalApplyLink').href = jobData.applicationLink;
            });

            // Post Job Form
            const postJobForm = document.getElementById('postJobForm');
            const postJobModal = new bootstrap.Modal(document.getElementById('postJobModal'));
            postJobForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const submitBtn = document.getElementById('submitJobBtn');
                submitBtn.disabled = true;
                submitBtn.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Posting...`;

                const jobData = {
                    title: document.getElementById('jobTitle').value,
                    company: document.getElementById('company').value,
                    location: document.getElementById('jobLocation').value,
                    description: document.getElementById('description').value,
                    applicationLink: document.getElementById('applicationLink').value,
                };

                try {
                    const response = await fetch('/post-job', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(jobData)
                    });
                    const result = await response.json();
                    
                    if(result.success) {
                        showToast('Success', result.message, true);
                        postJobModal.hide();
                        postJobForm.reset();
                        // Optionally, refresh the page to show the new job
                        setTimeout(() => window.location.reload(), 1500);
                    } else {
                        showToast('Error', result.message, false);
                    }
                } catch (error) {
                    showToast('Error', 'An unexpected error occurred.', false);
                } finally {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = 'Post Job';
                }
            });
        });
    </script>
</body>
</html>
