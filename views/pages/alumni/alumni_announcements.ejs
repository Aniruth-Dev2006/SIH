<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Announcements | Alumnium</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/alumni.css">
    <script>
        (function() {
            const savedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
            if (savedTheme === 'dark') {
                document.documentElement.classList.add('dark');
            }
        })();
    </script>
</head>
<body>

    <script>
        (function() {
            const savedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
            if (savedTheme === 'dark') { document.documentElement.classList.add('dark'); }
        })();
    </script>

    <div class="sidebar-backdrop" id="sidebarBackdrop"></div>
    <div class="dashboard-layout">
        
        <%- include('partials/alumni-sidebar', { currentPage: 'announcements', alumni: alumni }) %>

        <main class="main-content">
            <div class="mobile-header d-lg-none mb-4">
                <h1 class="h2">Announcements</h1>
                <button class="btn btn-light" type="button" id="sidebarToggle"><i class="bi bi-list"></i></button>
            </div>
            
            <h1 class="h2 d-none d-lg-block mb-4">Announcements</h1>

            <div class="content-card animate-on-scroll">
                <div class="aurora-glow"></div>
                <div class="announcement-timeline">
                    <% if (locals.announcements && announcements.length > 0) { %>
                        <% announcements.forEach(announcement => { %>
                            <div class="timeline-item">
                                <div class="timeline-item-icon"><i class="bi bi-check"></i></div>
                                <div class="timeline-date"><%= new Date(announcement.date).toLocaleDateString('en-IN', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %></div>
                                <div class="timeline-title"><%= announcement.title %></div>
                                <p class="timeline-content"><%= announcement.content %></p>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="text-center text-muted-foreground py-5">
                            <h5 class="fw-bold">No Announcements Yet</h5>
                            <p>There are no new announcements at this time.</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const themeMenuToggle = document.getElementById('theme-menu-toggle');
            const htmlElement = document.documentElement;
            const applyTheme = (theme) => {
                htmlElement.classList.remove('light', 'dark');
                htmlElement.classList.add(theme);
            };
            
            themeMenuToggle.addEventListener('click', (e) => {
                e.preventDefault();
                const newTheme = htmlElement.classList.contains('dark') ? 'light' : 'dark';
                localStorage.setItem('theme', newTheme);
                applyTheme(newTheme);
            });

            const animatedElements = document.querySelectorAll('.animate-on-scroll');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('is-visible'); } });
            }, { threshold: 0.1 });
            animatedElements.forEach(el => { observer.observe(el); });

            const sidebarToggle = document.getElementById('sidebarToggle');
            const sidebar = document.getElementById('sidebar');
            const backdrop = document.getElementById('sidebarBackdrop');
            if (sidebarToggle && sidebar && backdrop) {
                sidebarToggle.addEventListener('click', () => {
                    sidebar.classList.add('show');
                    document.body.classList.add('sidebar-open');
                });
                backdrop.addEventListener('click', () => {
                    sidebar.classList.remove('show');
                    document.body.classList.remove('sidebar-open');
                });
            }
        });
    </script>
</body>
</html>

