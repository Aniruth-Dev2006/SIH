<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Final Admin Dashboard | Alumnium</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="admin.css">
</head>

<body>

    <div class="sidebar-backdrop" id="sidebarBackdrop"></div>
    <div class="dashboard-layout">
        <aside class="sidebar" id="sidebar">
            <a href="#" class="sidebar-header"><i class="bi bi-link-45deg"></i> Alumnium</a>
            <nav class="sidebar-nav">
                <ul class="nav flex-column">
                    <li class="nav-item"><a class="nav-link active" href="/admin"><i class="bi bi-grid-1x2-fill"></i> Dashboard</a></li>
                    <li class="nav-item"><a class="nav-link" href="/user_management"><i class="bi bi-people-fill"></i> User Management</a></li>
                    <li class="nav-item"><a class="nav-link" href="/announcements"><i class="bi bi-megaphone-fill"></i> Announcements</a></li>
                    <li class="nav-item"><a class="nav-link" href="/events"><i class="bi bi-calendar-event-fill"></i> Events</a></li>
                    <li class="nav-item"><a class="nav-link" href="#"><i class="bi bi-cash-coin"></i> Donations</a></li>
                    <li class="nav-item"><a class="nav-link" href="#"><i class="bi bi-chat-quote-fill"></i> Feedback</a></li>
                </ul>
            </nav>
            <div class="sidebar-footer">
                <div class="dropdown dropend w-100">
                    <div class="d-flex align-items-center">
                        <a href="#" class="user-profile">
                            <img src="https://placehold.co/40x40/EBEBEB/000000?text=A" alt="Admin">
                            <div>
                                <div class="fw-bold">Admin User</div><small class="text-muted-foreground"><%=admin%></small></div>
                        </a>
                        <a href="#" class="profile-menu-trigger" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-three-dots-vertical"></i></a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" id="theme-menu-toggle"><i class="bi bi-moon-stars-fill me-2"></i> Theme</a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item text-danger" href="/"><i class="bi bi-box-arrow-right me-2"></i> Logout</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </aside>

        <main class="main-content">
            <div class="mobile-header d-lg-none mb-4">
                <h1 class="h2">Dashboard</h1>
                <button class="btn btn-light" type="button" id="sidebarToggle"><i class="bi bi-list"></i></button>
            </div>
            <h1 class="h2 d-none d-lg-block mb-4">Dashboard</h1>

            <div class="row g-4">
                <!-- Stat Cards -->
                <div class="col-sm-6 col-xl-3 animate-on-scroll" style="--animation-order: 1;">
                    <div class="content-card">
                        <div class="aurora-glow"></div>
                        <h5 class="stat-card-title">Total Donations (YTD)</h5>
                        <p class="stat-card-value">₹84.2L</p>
                        <p class="text-muted-foreground small mb-0">+12.1% this month</p>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3 animate-on-scroll" style="--animation-order: 2;">
                    <div class="content-card">
                        <div class="aurora-glow"></div>
                        <h5 class="stat-card-title">Upcoming Events</h5>
                        <p class="stat-card-value"><%=Upcoming.length%></p>
                        <p class="text-muted-foreground small mb-0">Total <%=total.length%> hosted</p>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3 animate-on-scroll" style="--animation-order: 3;">
                    <div class="content-card">
                        <div class="aurora-glow"></div>
                        <h5 class="stat-card-title">Pending Verifications</h5>
                        <p class="stat-card-value">18</p>
                        <p class="text-muted-foreground small mb-0">Action required</p>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3 animate-on-scroll" style="--animation-order: 4;">
                    <div class="content-card">
                        <div class="aurora-glow"></div>
                        <h5 class="stat-card-title">New Feedback</h5>
                        <p class="stat-card-value">27</p>
                        <p class="text-muted-foreground small mb-0">Needs review</p>
                    </div>
                </div>

                <div class="col-12 animate-on-scroll" style="--animation-order: 5;">
                    <div class="content-card">
                        <div class="aurora-glow"></div>
                        <h5 class="mb-3">Upcoming Events</h5>
                        <div class="col-12 animate-on-scroll" style="--animation-order: 5;">
                            <div class="content-card">
                                <div class="aurora-glow"></div>
                                <div class="table-responsive">
                                    <table class="table mb-0">
                                        <thead>
                                            <tr>
                                                <th>Event Name</th>
                                                <th>Date</th>
                                                <th>Time</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <%for(var i=0;i<events.length;i++){%>
                                            <tr>
                                                <td><%=events[i].title%></td>
                                                <td><%=events[i].date%></td>
                                                <td><span class="fw-bold"></span> <%=events[i].time%></td>
                                            </tr>
                                            <%}%>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-6 animate-on-scroll" style="--animation-order: 6;">
                    <div class="content-card">
                        <div class="aurora-glow"></div>
                        <h5 class="mb-3">Recent Announcements</h5>
                        <ul class="list-unstyled mb-0" style="flex-grow: 1;">
                            <li class="mb-3 pb-3 border-bottom">
                                <p class="fw-bold mb-1">
                                    <%=ann%>
                                </p><small class="text-muted-foreground">Posted 2 hours ago</small></li>
                            <li>
                                <p class="fw-bold mb-1">
                                    <%=ann1%>
                                </p><small class="text-muted-foreground">Posted yesterday</small></li>
                        </ul>
                        <button class="btn btn-light mt-3" data-bs-toggle="modal" data-bs-target="#announcementModal">✨ Generate with AI</button>
                    </div>
                </div>
                <div class="col-lg-6 animate-on-scroll" style="--animation-order: 7;">
                    <div class="content-card">
                        <div class="aurora-glow"></div>
                        <h5 class="mb-3">Latest Feedback</h5>
                        <div class="p-3 rounded-2 mb-3" style="background-color: var(--secondary); flex-grow: 1;">
                            <p class="mb-1 fst-italic">"The recent webinar on AI was fantastic. It would be great to have more events focused on emerging technologies..."</p><small class="text-muted-foreground">- Priya Sharma, Class of '22</small></div>
                        <button class="btn btn-light mt-3" data-bs-toggle="modal" data-bs-target="#feedbackModal">✨ Summarize Feedback</button>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Gemini Modals -->
    <!-- Announcement Generator Modal -->
    <div class="modal fade" id="announcementModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fw-bold">✨ AI Announcement Generator</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Announcement Topic:</label>
                        <textarea class="form-control" id="announcement-topic" rows="2" placeholder="e.g., Annual Alumni Meet in October"></textarea>
                    </div>
                    <button class="btn btn-primary w-100" id="generate-announcement-btn">Generate</button>
                    <div class="mt-4">
                        <h6 class="small text-muted-foreground">GENERATED ANNOUNCEMENT:</h6>
                        <div class="gemini-result-area" id="announcement-result">
                            <div class="text-center text-muted-foreground pt-5">AI-generated content will appear here...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Feedback Summary Modal -->
    <div class="modal fade" id="feedbackModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fw-bold">✨ AI Feedback Summary</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p class="text-muted-foreground small">This tool uses AI to analyze all recent feedback and provide a concise summary.</p>
                    <button class="btn btn-primary w-100" id="summarize-feedback-btn">Summarize Now</button>
                    <div class="mt-4">
                        <h6 class="small text-muted-foreground">AI-POWERED SUMMARY:</h6>
                        <div class="gemini-result-area" id="feedback-result">
                            <div class="text-center text-muted-foreground pt-5">AI summary will appear here...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const themeMenuToggle = document.getElementById('theme-menu-toggle');
            const htmlElement = document.documentElement;
            const applyTheme = (theme) => { htmlElement.classList.remove('light', 'dark'); htmlElement.classList.add(theme); };
            const savedTheme = localStorage.getItem('theme');
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            if (savedTheme) { applyTheme(savedTheme); } else { applyTheme(prefersDark ? 'dark' : 'light'); }
            
            themeMenuToggle.addEventListener('click', (e) => {
                e.preventDefault();
                const newTheme = htmlElement.classList.contains('dark') ? 'light' : 'dark';
                localStorage.setItem('theme', newTheme);
                applyTheme(newTheme);
            });

            const animatedElements = document.querySelectorAll('.animate-on-scroll');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('is-visible'); } });
            }, { threshold: 0.1 });
            animatedElements.forEach(el => { observer.observe(el); });

            const sidebarToggle = document.getElementById('sidebarToggle');
            const sidebar = document.getElementById('sidebar');
            const backdrop = document.getElementById('sidebarBackdrop');
            if (sidebarToggle && sidebar && backdrop) {
                sidebarToggle.addEventListener('click', () => { sidebar.classList.add('show'); document.body.classList.add('sidebar-open'); });
                backdrop.addEventListener('click', () => { sidebar.classList.remove('show'); document.body.classList.remove('sidebar-open'); });
            }

            // --- GEMINI API INTEGRATION ---
            const apiKey = "AIzaSyBkL4U3az1ccg9s8_z3YKSU0y6IhXf7898";
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;

            const callGeminiAPI = async (payload, resultElement, buttonElement) => {
                const originalButtonText = buttonElement.innerHTML;
                buttonElement.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Generating...`;
                buttonElement.disabled = true;

                try {
                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });
                    if (!response.ok) throw new Error(`API Error: ${response.status}`);
                    const result = await response.json();
                    const text = result.candidates?.[0]?.content?.parts?.[0]?.text;
                    if (text) {
                        resultElement.innerHTML = text.replace(/\n/g, '<br>').replace(/\*/g, '<strong>').replace(/•/g, '<ul><li>').replace(/(<br>|$)/g, '</li>$1');
                    } else {
                        resultElement.textContent = 'Sorry, the AI could not generate a response.';
                    }
                } catch (error) {
                    console.error("Gemini API call failed:", error);
                    resultElement.textContent = 'An error occurred. Please try again.';
                } finally {
                    buttonElement.innerHTML = originalButtonText;
                    buttonElement.disabled = false;
                }
            };

            // Announcement Generator Logic
            const generateAnnouncementBtn = document.getElementById('generate-announcement-btn');
            const announcementTopic = document.getElementById('announcement-topic');
            const announcementResult = document.getElementById('announcement-result');
            generateAnnouncementBtn.addEventListener('click', () => {
                const topic = announcementTopic.value;
                if (!topic) {
                    announcementResult.textContent = 'Please enter a topic.';
                    return;
                }
                const systemPrompt = "You are an expert communications manager for a university alumni portal called Alumnium. Write a clear, engaging, and professional announcement based on the following topic. The tone should be formal but friendly. Keep it concise. Start with a compelling headline.";
                const payload = { contents: [{ parts: [{ text: `${systemPrompt} Topic: ${topic}` }] }] };
                callGeminiAPI(payload, announcementResult, generateAnnouncementBtn);
            });

            // Feedback Summarizer Logic
            const summarizeFeedbackBtn = document.getElementById('summarize-feedback-btn');
            const feedbackResult = document.getElementById('feedback-result');
            summarizeFeedbackBtn.addEventListener('click', () => {
                // In a real app, you would fetch this from a database.
                const mockFeedback = [
                    "The recent webinar on AI was fantastic. It would be great to have more events focused on emerging technologies like blockchain.",
                    "The mentorship program is a great initiative, but the matching process could be improved. My mentor was in a completely different field.",
                    "I love the new job board! I found my current internship through it. Thank you!",
                    "The user interface of the portal is beautiful, but sometimes it feels a bit slow to load on mobile.",
                    "Can we have more networking events in Mumbai? It's hard for those of us not in Delhi to attend."
                ].join('\n');

                const systemPrompt = "You are an analyst for the Alumnium alumni portal. I will provide you with a list of user feedback. Summarize the key themes, overall sentiment, and provide a few actionable suggestions in a bulleted list. Format the output cleanly using Markdown-style lists (e.g., • Point 1).";
                const payload = { contents: [{ parts: [{ text: `${systemPrompt}\n\nFeedback:\n${mockFeedback}` }] }] };
                callGeminiAPI(payload, feedbackResult, summarizeFeedbackBtn);
            });
        });
    </script>
</body>

</html>